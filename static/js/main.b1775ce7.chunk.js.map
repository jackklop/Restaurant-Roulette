{"version":3,"sources":["hungry-cat.jpg","RestDeats.js","Display1.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","RestDeats","className","src","this","props","image","alt","target","rel","href","url","name","type","price","address","Component","Display1","state","value","city","cityID","restaurantName","restaurantType","restaurantPrice","restaurantAddress","restaurantUrl","restaurantImg","loaded","hasError","handleChange","bind","handleSubmit","getInfo","setChanges","reveal","reload","axios","method","headers","response","undefined","data","location_suggestions","setState","entity_id","console","log","secondResponse","data2","rand","Math","floor","random","restaurants","restaurant","cuisines","average_cost_for_two","location","featured_image","e","preventDefault","window","onSubmit","id","onChange","placeholder","Cat","App","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.b1775ce7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/hungry-cat.b8943aa4.jpg\";","import React, { Component } from \"react\";\r\nimport \"./RestDeats.css\";\r\n\r\nexport default class RestDeats extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\".wrapper1\">\r\n        <div className=\"flex\">\r\n          <div className=\"left-side side\">\r\n            <img src={this.props.image} alt=\"restaurant img\"></img>\r\n            <a\r\n              target=\"_blank\"\r\n              rel=\"noopener noreferrer\"\r\n              href={this.props.url}\r\n              className=\"\"\r\n            >\r\n              Click Here For More Info\r\n            </a>\r\n          </div>\r\n          <div className=\"right-side side\">\r\n            <h2>Maybe you will enjoy this restaurant?</h2>\r\n            <h3>{this.props.name}</h3>\r\n            <h4>Cusine: {this.props.type}</h4>\r\n            <h4>Price(Average For 2): {this.props.price}$</h4>\r\n            <h4>Location: {this.props.address}</h4>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport RestDeats from \"./RestDeats\";\r\nimport \"./Display.css\";\r\nimport Cat from \"./hungry-cat.jpg\";\r\nexport default class Display1 extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      value: \"\",\r\n      city: \"\",\r\n      cityID: \"\",\r\n      restaurantName: \"\",\r\n      restaurantType: \"\",\r\n      restaurantPrice: \"\",\r\n      restaurantAddress: \"\",\r\n      restaurantUrl: \"\",\r\n      restaurantImg: \"\",\r\n      loaded: false,\r\n      hasError: 0\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.getInfo = this.getInfo.bind(this);\r\n    this.setChanges = this.setChanges.bind(this);\r\n    this.reveal = this.reveal.bind(this);\r\n    this.reload = this.reload.bind(this);\r\n  }\r\n  async getInfo() {\r\n    const response = await axios({\r\n      method: \"GET\",\r\n      url: `https://developers.zomato.com/api/v2.1/locations?query=${this.state.value}`,\r\n      headers: {\r\n        \"user-key\": \"4ac35227ba521ba1c61713891928463f\",\r\n        \"content-type\": \"application/json\"\r\n      }\r\n    });\r\n    const data = await response;\r\n    if (data.data.location_suggestions[0] === undefined) {\r\n      return this.setState({\r\n        hasError: 404\r\n      });\r\n    } else {\r\n      this.setState({\r\n        hasError: 0,\r\n        cityID: data.data.location_suggestions[0].entity_id\r\n      });\r\n      console.log(this.state.cityID);\r\n    }\r\n\r\n    const secondResponse = await axios({\r\n      method: \"GET\",\r\n      url: `https://developers.zomato.com/api/v2.1/search?entity_id=${this.state.cityID}&entity_type=city`,\r\n      headers: {\r\n        \"user-key\": \"4ac35227ba521ba1c61713891928463f\",\r\n        \"content-type\": \"application/json\"\r\n      }\r\n    });\r\n    const data2 = await secondResponse;\r\n    var rand = Math.floor(Math.random() * 20);\r\n    if (data2.data.restaurants[rand] === undefined) {\r\n      return this.setState({\r\n        hasError: 404\r\n      });\r\n    } else {\r\n      this.setState({\r\n        hasError: 0,\r\n        restaurantName: `${data2.data.restaurants[rand].restaurant.name}`,\r\n        restaurantType: `${data2.data.restaurants[rand].restaurant.cuisines}`,\r\n        restaurantPrice: `${data2.data.restaurants[rand].restaurant.average_cost_for_two}`,\r\n        restaurantAddress: `${data2.data.restaurants[rand].restaurant.location.address}`,\r\n        restaurantUrl: `${data2.data.restaurants[rand].restaurant.url}`,\r\n        restaurantImg: `${data2.data.restaurants[rand].restaurant.featured_image}`\r\n      });\r\n      await this.setChanges();\r\n    }\r\n    console.log(data2.data.restaurants[3].restaurant);\r\n    // console.log(data2.data.restaurants[3].restaurant.name);\r\n    // console.log(`this is name: ${name}`);\r\n    // console.log(data2.data.restaurants[3].restaurant.cuisines);\r\n    // console.log(data2.data.restaurants[3].restaurant.price_range);\r\n    // console.log(data2.data.restaurants[3].restaurant.location.address);\r\n    // console.log(data2.data.restaurants[rand].restaurant.featured_image);\r\n  }\r\n  handleChange(e) {\r\n    this.setState({\r\n      value: e.target.value\r\n    });\r\n  }\r\n  handleSubmit(e) {\r\n    e.preventDefault();\r\n    this.setState({\r\n      city: this.state.value\r\n    });\r\n    console.log(\"started\");\r\n    this.getInfo();\r\n  }\r\n  reveal() {\r\n    this.setState({\r\n      loaded: true\r\n    });\r\n  }\r\n  reload() {\r\n    console.log(\"reloading\");\r\n    window.location.reload();\r\n  }\r\n  async setChanges() {\r\n    // this.setState = {\r\n    //   restaurantName: `${name}`,\r\n    //   restuarantType: data2.data.restaurants[3].restaurant.cuisines,\r\n    //   restaurantPrice: data2.data.restaurants[3].restaurant.price_range,\r\n    //   restaurantAddress: data2.data.restaurants[3].restaurant.location.address\r\n    // };\r\n    this.reveal();\r\n  }\r\n  render() {\r\n    //console.log(`${this.state.restaurantName}`);\r\n    // console.log(`${this.state.restaurantType}`);\r\n    // console.log(`${this.state.restaurantPrice}`);\r\n    // console.log(`${this.state.restaurantAddress}`);\r\n\r\n    if (this.state.hasError === 404) {\r\n      return (\r\n        <div className=\"wrapper\">\r\n          <h1>Restaurant Roulette</h1>\r\n          <form onSubmit={this.handleSubmit}>\r\n            <input\r\n              type=\"text\"\r\n              id=\"city\"\r\n              onChange={this.handleChange}\r\n              value={this.state.value}\r\n              placeholder=\"Enter City\"\r\n            ></input>\r\n            <button>Try Again</button>\r\n            <h2> No results found. (Make sure to enter an accurate city)</h2>\r\n          </form>\r\n          <img className=\"img1\" src={Cat} alt=\"cat-pic\"></img>\r\n          <p>Made using the Zomato API*</p>\r\n        </div>\r\n      );\r\n    } else {\r\n      if (!this.state.loaded) {\r\n        return (\r\n          <div className=\"wrapper\">\r\n            <h1 className=\"title\">Restaurant Roulette</h1>\r\n            <form onSubmit={this.handleSubmit}>\r\n              <input\r\n                type=\"text\"\r\n                id=\"city\"\r\n                onChange={this.handleChange}\r\n                value={this.state.value}\r\n                placeholder=\"Enter City\"\r\n              ></input>\r\n              <button>Find a Restaurant!</button>\r\n            </form>\r\n            <img className=\"img1\" src={Cat} alt=\"cat-pic\"></img>\r\n            <p>Made using the Zomato API*</p>\r\n          </div>\r\n        );\r\n      } else {\r\n        return (\r\n          <div className=\"wrapper\">\r\n            <h1 className=\"title\">Restaurant Roulette</h1>\r\n            <form onSubmit={this.handleSubmit}>\r\n              <input\r\n                type=\"text\"\r\n                id=\"city\"\r\n                onChange={this.handleChange}\r\n                value={this.state.value}\r\n                placeholder=\"Enter City\"\r\n              ></input>\r\n              <button>Reroll</button>\r\n              <RestDeats\r\n                name={this.state.restaurantName}\r\n                type={this.state.restaurantType}\r\n                price={this.state.restaurantPrice}\r\n                address={this.state.restaurantAddress}\r\n                image={this.state.restaurantImg}\r\n                url={this.state.restaurantUrl}\r\n              />\r\n            </form>\r\n            <p>Made using the Zomato API*</p>\r\n          </div>\r\n        );\r\n      }\r\n    }\r\n  }\r\n}\r\n","import React from \"react\";\nimport Display from \"./Display1\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Display />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}